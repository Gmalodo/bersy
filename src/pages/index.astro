---
import Layout from '../layouts/Layout.astro';
import HomeBackground from '../components/homeBackground.astro'
import Page from '../components/page.astro'
import { Image } from 'astro:assets';
import chateau from "../assets/berzy-chateau.jpg"
import "@fontsource/roboto/400.css";
import "@fontsource/roboto/500.css";
---

<Layout>
	<div class="relative w-full h-screen">
		<HomeBackground/>
		<div class="h-[670vh] w-full text-[#000000]">
			<div id="fade-target" class="relative z-10 h-[670vh] w-full bg-transparent duration-300">
				<div class="fixed lg:w-[40rem] lg:h-[40rem] h-[35rem] w-[90%] lg:left-40 left-1/2 top-1/2 transform lg:-translate-y-1/2 -translate-y-3/5 -translate-x-1/2 lg:translate-x-0 bg-surface-container/60 backdrop-blur-sm border-2 border-outline-variant rounded-2xl shadow-2xl flex flex-col justify-around">
					<h1 class="text-headline-large font-neutral text-center font-extrabold lg:mt-12 mt-8">
						<span class="hidden">les activitées du</span>Chateau de berzy le sec
					</h1>
					<p class="lg:m-12 lg:mb-8 m-8 mb-6">Nous vous proposons de découvrir le patrimoine autrement à travers nos stages techniques
						mêlant savoir-faire et archéologie expérimentale, en visitant nos chantiers de restauration ou en
						participant à nos activités pédagogiques portées sur l’art de bâtir au Moyen-Age.</p>
					<Image
						src={chateau}
						alt="chateau de berzy le sec"
						width={350}
						height={150}
						class="w-auto m-8 rounded-xl"
						fetchpriority="high"
						loading="eager"
					/>
					<!--<p class="m-16 mt-12 text-center tracking-wide text-xl font-medium lg:block hidden ">-->
					<!--	Venez participer a nos activitées ludique dans ce sonptueux cadre qu'est la chateau de berzy !!</p>-->
				</div>
			</div>
			<Page/>
		</div>
	</div>
	<script is:inline>
	const fadeEl = document.getElementById('fade-target');
	const rightCol = document.getElementById("right-col-content");

	let ticking = false;
	let onBot = false;
	let isAnimated = false;

	const visite = document.getElementById("visite");
	const pot = document.getElementById("pot");
	const bois = document.getElementById("bois");
	const pierre = document.getElementById("pierre");
	const content = document.getElementById("content");
	const contact = document.getElementById("contact");

	let visiteHidden = false
	let potHidden = true
	let boisHidden = true
	let pierreHidden = true
	let isContact = false

	async function smoothScrollTo(target, duration) {
		return new Promise((resolve) => {
			const scrollY = window.scrollY;
			const distance = target - scrollY;
			let startTime = null;

			function animation(currentTime) {
				if (startTime === null) startTime = currentTime;
				const elapsed = currentTime - startTime;
				const progress = Math.min(elapsed / duration, 1);

				const ease = progress * progress;

				window.scrollTo(0, scrollY + distance * ease);

				if (elapsed < duration) {
					requestAnimationFrame(animation);
				} else {
					resolve();
				}
			}

			requestAnimationFrame(animation);
		})
	}

	async function onScroll() {
		let scrollY = window.scrollY;
		if (scrollY > 100 && !onBot && !isAnimated) {
			isAnimated = true;
			await smoothScrollTo(1150, 2000);
			scrollY = 1300
			onBot = true;
			isAnimated = false;
			document.getElementById("page-bg").classList.remove("hidden")
		}
		if (scrollY < 1150 && onBot && !isAnimated) {
			isAnimated = true;
			await smoothScrollTo(0, 1000);
			scrollY = 0
			onBot = false;
			isAnimated = false;
			document.getElementById("page-bg").classList.add("hidden")
		}

		if (scrollY < 1550 && scrollY > 1150 && visiteHidden){
			visite.classList.remove("opacity-0");
			visite.classList.add("opacity-100");
			pot.classList.remove("opacity-100");
			pot.classList.add("opacity-0");
			potHidden = true
			visiteHidden = false
		}

		if (scrollY < 2290 && scrollY > 1550 && potHidden){
			pot.classList.remove("opacity-0");
			pot.classList.add("opacity-100");
			visite.classList.remove("opacity-100");
			visite.classList.add("opacity-0");
			bois.classList.remove("opacity-100");
			bois.classList.add("opacity-0");
			visiteHidden = true
			potHidden = false
			boisHidden = true
		}

		if (scrollY < 3150 && scrollY > 2290 && boisHidden){
			bois.classList.remove("opacity-0");
			bois.classList.add("opacity-100");
			pot.classList.remove("opacity-100");
			pot.classList.add("opacity-0");
			pierre.classList.remove("opacity-100");
			pierre.classList.add("opacity-0");
			potHidden = true
			boisHidden = false
			pierreHidden = true
		}
		if (scrollY < 3800 && scrollY > 3150 && pierreHidden){
			pierre.classList.remove("opacity-0");
			pierre.classList.add("opacity-100");
			bois.classList.remove("opacity-100");
			bois.classList.add("opacity-0");
			boisHidden = true
			pierreHidden = false
		}

		if (scrollY < 3800 && isContact) {
			content.classList.remove("opacity-0");
			content.classList.add("opacity-100");
			contact.classList.remove("opacity-100");
			contact.classList.add("opacity-0");
			isContact = false
		}
		console.log(isContact);
		if (scrollY > 3800 && !isContact) {
			content.classList.add("opacity-0");
			content.classList.remove("opacity-100");
			contact.classList.add("opacity-100");
			contact.classList.remove("opacity-0");
			isContact = true
		}

		if (!ticking) {
			window.requestAnimationFrame(() => {
				fadeEl.style.opacity = scrollY > 900 ? '0' : '1';
				setTimeout(() => {
					if (scrollY > 900) fadeEl.classList.add("hidden");
					else fadeEl.classList.remove("hidden");
				}, 1000)
				ticking = false;
			});
			ticking = true;
		}

		const contentY = interpolate(scrollY, [1100, 4000], [0, -200 * window.innerHeight / 90]);

		rightCol.style.transform = `translateY(${contentY}px)`;
	}

	window.addEventListener('scroll', onScroll, { passive: true });


	function interpolate(value, inputRange, outputRange) {
		for (let i = 0; i < inputRange.length - 1; i++) {
			const inMin = inputRange[i];
			const inMax = inputRange[i + 1];
			const outMin = outputRange[i];
			const outMax = outputRange[i + 1];

			if (value >= inMin && value <= inMax) {
				const ratio = (value - inMin) / (inMax - inMin);
				return outMin + ratio * (outMax - outMin);
			}
		}
		return value < inputRange[0]
			? outputRange[0]
			: outputRange[outputRange.length - 1];
	}
	</script>
</Layout>
